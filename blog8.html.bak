<!doctype html>
<html lang="en">

<head>
    <title>Vanishree ma'am's Website</title>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS v5.2.0-beta1 -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css"
        integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@100;300;400;700&display=swap"
        rel="stylesheet">
    <style>
        body {
            font-family: "Times New Roman", Times, serif; 
        }
    </style>
</head>

<body>

<div class="container">

		<div class="row"  >
		<div class="row text-center ">
            <h1>Differential Privacy vs. End-to-end Encryption – It’s Privacy vs. Privacy!</h1>
            <p> October 14, 2016</p>
        </div>
	<div class="row ">
  <div class="col">
    <div class="card w-100 h-100">
      <img src="blog8.jpg" class="card-img-top"
        alt="" />
      <div class="card-body">
        <h5 class="card-title text-center "><span class="fw-bold">In collaboration with <a href="https://www.linkedin.com/in/yunhuilong/"> Yunhui Long</a>. Originally published <a href="http://www.infosecisland.com/blogview/24830-Differential-Privacy-vs-End-to-end-Encryption--Its-Privacy-vs-Privacy.html">here</a> on Infosec Island.</span></h5>
        
		<p class="card-text">
        
		In this time and age, where companies brew money using user data, consumer privacy is at stake. Incessant identity thefts and phishing attacks, and revelations about mass government surveillance have resulted in privacy paranoia among consumers. Consumers have thus come to prefer products and services with stronger privacy postures. To this end, two major privacy technologies have gained immense attention -- End-to-end Encryption and Differential Privacy. While both the technologies strive to protect user privacy, interestingly, when put together, the whole is smaller than the sum of its parts.</br>
		Firstly, what exactly are end-to-end encryption and differential privacy?</br>
		</p>
		
		<p class="card-text">
		<h6><span class="fw-bold">What is End-to-end Encryption?</span></h6>
		End-to-end encryption (E2EE) is a popular privacy technology for instant-messaging services. With this technology, only the communicating users can read the messages. Technically speaking, this works by encoding the sender’s message in such a way that only the receiver has the key to decode it.<br>
		Just in the past three years, various messaging apps have implemented end-to-end encryption. Notably, this shield not only protects users from external eavesdroppers, but also ensures that even the company offering the instant-messaging service cannot access the data.</br>
		</p>
		
		<p class="card-text">
		<h6><span class="fw-bold">What is Differential Privacy?</span></h6>
		Intuitively, differential privacy is a technique that can reveal interesting patterns in a large dataset, while still protecting privacy of individual data entries.<br>
		To understand the technique, consider a database of salaries of all Software Engineers in the Silicon Valley. Let us say that an analyst is allowed to access the average of the salaries. Denote the average value by avg1. Let us say that a new item v is added to the database; let the new average be avg2. The analyst can easily decode what v is, just by knowing avg1 and avg2. [v = avg2 * (N+1) – avg1 * N], where N is the total number of salaries in the original database.</br><br>
		Differential privacy avoids such scenarios. More specifically, differential privacy is a statistical learning tool that works by adding carefully computed mathematical noise to the statistical aggregate. In the above example, the noise term added to the average salary does not allow the analyst to learn information about the exact salary of any individual software engineer. The noise term is large enough to mask individual data items, but small enough to allow any patterns in the dataset to appear.</br>
		</p>
		
		<p class="card-text">
		<h6><span class="fw-bold">Differential Privacy to Protect User Privacy</span></h6>
		Until recently, differential privacy had been a topic of theoretical research without much application in real-world scenarios. Clearly, differential privacy can bring a significant value to the table: In the today’s consumer-driven economy, it’s crucial for businesses to learn and adapt to consumer behavior. Thus, collecting and studying patterns in consumer data has become key ingredient for survival. The ability to extract patterns from large datasets, while still protecting privacy of individual data points seems to be a boon.<br>
		<span class="fw-bold">An application of differential privacy:</span>Consider a company C providing an end-to-end encrypted instant-messaging service. A desirable feature of an instant-messaging service is smart autocomplete. To provide this feature, all the data that C needs is just the English dictionary. Now, consider a smart autocomplete feature that also suggests trending slangs even before you have heard of those slangs. Note that the suggestions are specifically based on a population’s messaging behavior. So, clearly, this feature needs consumer data. In such a case, differential privacy might be used to collect and process consumer data, while still preserving individual privacy.</br><br>
		<span class="fw-bold">Methodologies for implementing differential privacy:</span>Unfortunately, differential privacy had been confined only to theoretical research, and there isn’t much work on how to employ this in practice. Thus, the exact methodologies of implementing this technology large scale is unclear. A specific interesting question is what exact methodology one should use to sample the noise terms. There are two major methodologies in the literature:</br><br>
		1.A prevalent methodology is to first collect the exact data points, compute an aggregate (such as, total count or average) of the collected data points, and then add noise to the aggregate. This necessitates the users sending their exact information to the company C. Thus, while this methodology protects user privacy from the public, the company still gets access to the exact user information. This is undesirable.</br><br>
		2.Thankfully, there is another methodology which, although less prevalent, seems to fit the bill: It involves adding noise to the data points at the user end before the data is collected and sent to C’s cloud storage. Then C would aggregate the noised data points. This helps preserve some privacy from C too. A significant research in this area came from Google Research --RAPPOR methodology, and it involves the so-called tools of ‘hashing’ and ‘sub-sampling’.</br>
		</p>
		
		<p class="card-text text-center">
		<span class="fw-bold">However, the devil is in the details.</span>
		</p>
		
		<p class="card-text">
		<h6><span class="fw-bold">The Devil in the Details</span></h6>
		<span class="fw-bold">Detail 1:</span> RAPPOR-like techniques would require C to know a set of candidate strings of which C is computing the usage frequency. For concreteness, in the case of trending slangs, C would actually need to know the slangs, that the users are sending through the messaging service, to determine the frequency.<br>
		<span class="fw-bold">Detail 2:</span> Recall that the conversations are end-to-end encrypted. Also recall that the objective of end-to-end encryption is to have no door through which C can obtain user data (so that C may not be coerced to reveal user data even by government surveillance warrants).</br><br>
		<span class="fw-bold">The devil: </span>Detail 1 implied that C needs to look into user data, Detail 2 recalled that the data is already encrypted. In other words, to learn the candidate strings used in differential privacy techniques, the company may need to see the unencrypted content of individuals' conversations, which is against the very intention of end-to-end encryption.</br><br>
		This shows that the two privacy technologies fundamentally tussle with each other. In fact, we have seen that one can seriously backpedal the other. Thus, any methodology that will make these privacy technologies work together will be incredibly non-trivial and ground-breaking.</br><br>
		In summary, although end-to-end encryption and differential privacy offer strong user privacy protection, these two technologies interact in interesting ways, one fundamentally backpedaling the effect of the other. In this light, while differential privacy is a promising tool, implementing and deploying it while retaining the privacy of end-to-end encryption is challenging.</br>
		</p>
		
		</div>
      <div class="card-footer text-center">
        <a href="index.html" class="btn btn-secondary btn-lg btn-block">Visit Website</a>
      </div>
	  
	  
    </div>
  </div>
  
  </body>
</html>

		
		